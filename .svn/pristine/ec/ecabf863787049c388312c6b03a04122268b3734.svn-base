package com.capitalbio.oemv2.myapplication.View;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Align;
import android.graphics.RectF;
import android.util.AttributeSet;
import android.view.View;

public class DrawArcView extends View {
	private Paint paint;
	private Paint arcpaint;
	private Paint textpaint;
	private int centre; // 获取圆心的x坐标
	private int radius; // 圆环的半径
	private Float roundWidth = 10f;
	private float textSize = 20f;
	private boolean danwei = false;
	private String value;
	/**
	 * 最大进度
	 */
	private int max = 100;

	/**
	 * 当前进度
	 */
	private int progress;
	/**
	 * 圆环进度的颜色
	 */
	private String roundProgressColor;

	public String getCricleProgressColor() {
		return roundProgressColor;
	}

	public void setCricleProgressColor(String cricleProgressColor) {
		this.roundProgressColor = cricleProgressColor;
	}

	public synchronized int getMax() {
		return max;
	}

	/**
	 * 设置进度的最大值
	 * 
	 * @param max
	 */
	public synchronized void setMax(int max) {
		if (max < 0) {
			throw new IllegalArgumentException("max not less than 0");
		}
		this.max = max;
	}

	/**
	 * 获取进度.需要同步
	 * 
	 * @return
	 */
	public synchronized int getProgress() {
		return progress;
	}

	/**
	 * 设置进度
	 * 
	 * @param progress
	 */
	public synchronized void setProgress(int progress, boolean danwei,String value) {
		this.danwei = danwei;
		this.value=value;
		if (progress < 0) {
			throw new IllegalArgumentException("progress not less than 0");
		}
		if (progress > max) {
			progress = max;
		}
		if (progress <= max) {
			this.progress = progress;
			postInvalidate();
		}

	}

	public DrawArcView(Context context, AttributeSet attrs, int defStyleAttr) {
		super(context, attrs, defStyleAttr);
		// TODO Auto-generated constructor stub

	}

	public DrawArcView(Context context, AttributeSet attrs) {
		super(context, attrs);
		// TODO Auto-generated constructor stub

	}

	public DrawArcView(Context context) {
		super(context);
		// TODO Auto-generated constructor stub

	}

	@Override
	protected void onDraw(Canvas canvas) {
		super.onDraw(canvas);
		centre = getWidth() / 2; // 获取圆心的x坐标
		radius = (int) (centre - roundWidth - 20); // 圆环的半径
		initpaint();
		paintcircle(canvas);
	}

	/**
	 * 初始化画笔
	 * */
	private void initpaint() {

		paint = new Paint();
		paint.setStyle(Paint.Style.STROKE);
		paint.setAntiAlias(true);// 去锯齿
		paint.setColor(Color.parseColor("#F0F0F0"));// 颜色
		paint.setTextSize(textSize);
		paint.setStrokeWidth(getWidth() / 10);

		// 绘制圆弧的画笔
		arcpaint = new Paint();
		arcpaint.setStyle(Paint.Style.STROKE);
		arcpaint.setAntiAlias(true);// 去锯齿
		arcpaint.setColor(Color.parseColor(roundProgressColor));// 颜色
		arcpaint.setStrokeWidth(getWidth() / 10);
		arcpaint.setStrokeCap(Paint.Cap.ROUND);
		// text画笔
		textpaint = new Paint();
		textpaint.setStyle(Paint.Style.FILL);
		textpaint.setAntiAlias(true);// 去锯齿
		textpaint.setColor(Color.BLACK);// 颜色
		textpaint.setTextSize(getWidth() / 4);
		textpaint.setTextAlign(Align.CENTER);

	}

	/***
	 * 绘制进度
	 * 
	 * 
	 * 
	 * */
	private void paintcircle(Canvas canvas) {
	    if (canvas == null) {
            return;
        }
	    
		try {
			float swepangle = 360 * progress / max;
            int percent = (int) (((float) progress / (float) max) * 100); // 中间的进度百分比，先转换成float在进行除法运算，不然都为0
            canvas.drawCircle(centre, centre, radius, paint); // 画出圆环
            RectF oval = new RectF(centre - radius, centre - radius, centre
            		+ radius, centre + radius);
            canvas.drawArc(oval, -90, swepangle, false, arcpaint); // 根据进度画圆弧
            float textWidth = textpaint.measureText("5"); // 测量字体宽度,根据字体的宽度设置在圆环中间
            if (danwei) {
            	canvas.drawText(value + "kg", centre, centre + (textWidth / 2),
            			textpaint); // 画出进度百分比
            } else {
            	canvas.drawText("", centre, centre + (textWidth / 2),
            			textpaint); // 画出进度百分比
            }

		/*	double x = centre +centre * Math.sin(swepangle);
			Log.i("sepangle",swepangle+"");
			double y =centre - centre*Math.cos(swepangle);
			Log.i("locationx",x+"");
			Log.i("locationy",y+"");
			Log.i("location",centre+"");
			canvas.drawText(progress / max + "%", (float)x, (float)y,textpaint); // 画出进度百分比*/
        } catch (Exception e) {
            e.printStackTrace();
        }

	}
}
