package com.capitalbio.oemv2.myapplication.Activity;

import android.app.Activity;
import android.app.Fragment;
import android.app.FragmentTransaction;
import android.graphics.Color;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.capitalbio.oemv2.myapplication.Const.BodyFatConst;
import com.capitalbio.oemv2.myapplication.Fragment.BodyFatFragmentDay;
import com.capitalbio.oemv2.myapplication.Fragment.BodyFatFragmentMeasure;
import com.capitalbio.oemv2.myapplication.Fragment.BodyFatFragmentMonth;
import com.capitalbio.oemv2.myapplication.R;
import com.capitalbio.oemv2.myapplication.Utils.TimeStampUtil;
import com.capitalbio.oemv2.myapplication.Utils.Utility;
import com.capitalbio.oemv2.myapplication.dialog.DateChooseYMDialog;

import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * Created by chengkun on 15-11-4.
 */
public class BodyFatActivity extends Activity implements View.OnClickListener {
    private TextView title, tvDate;
    private LinearLayout llSwitchDate;
    private TextView tv_switch_day,tv_switch_month;

    private RelativeLayout rl_switch_bottom, rl_switch_date;
    private LinearLayout ll_switch_bottom;
    private TextView tv_switch_left, tv_switch_right;//底部切换
    private ImageView iv_device_set,iv_top_right;// setbutton
    private String dateString;
    private SimpleDateFormat format, sf;
    private LinearLayout fgbody;
    Fragment bodyFatFragmentDay,bodyFatFragmentMonth,bodyFatFragmentMeasure,currentFragment;
    private String selectedDate;//日起滚动控件选中的日期
    private String curDay, curDay1;
    private String monthYM;
    private boolean isDay;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);  //无title
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
                WindowManager.LayoutParams.FLAG_FULLSCREEN);  //全屏
        setContentView(R.layout.activity_base);
        findViewById();
        init();
    }

    public void findViewById() {
        title = (TextView) findViewById(R.id.tv_top_title);
        tvDate = (TextView) findViewById(R.id.tv_date);
        llSwitchDate = (LinearLayout) findViewById(R.id.ll_switch_date);
        ll_switch_bottom = (LinearLayout) findViewById(R.id.ll_switch_bottom);
        tv_switch_day = (TextView) findViewById(R.id.tv_switch_day);
        tv_switch_month = (TextView) findViewById(R.id.tv_switch_month);
        rl_switch_bottom = (RelativeLayout) findViewById(R.id.rl_switch_bottom);
        tv_switch_left = (TextView) findViewById(R.id.tv_switch_left);
        tv_switch_right = (TextView) findViewById(R.id.tv_switch_right);
        rl_switch_date = (RelativeLayout) findViewById(R.id.rl_switch_date);
        tvDate.setOnClickListener(this);
        tv_switch_day.setOnClickListener(this);
        tv_switch_month.setOnClickListener(this);
        tv_switch_left.setOnClickListener(this);
        tv_switch_right.setOnClickListener(this);
        //  iv_device_set.setOnClickListener(this);
        fgbody = (LinearLayout) findViewById(R.id.ll_fg_body);
//------------------------------------------------
        iv_top_right = (ImageView) this.findViewById(R.id.iv_top_right);
        iv_top_right.setOnClickListener(this);

    }

    public void init() {
        title.setText(getResources().getString(R.string.bodyfat));
        String curYear1, curMonth1;
        curYear1 = new Date().getYear() + 1900 + "";
        curMonth1 = new Date().getMonth() + 1 + "";
        curDay1 = new Date().getDate() + "";
        String curYear = curYear1 + "年  ";
        String curMonth = curMonth1 + "月  ";
        curDay = curDay1 + "日";
        tvDate.setText(curYear + curMonth);
        selectedDate = curYear1 + "-" + curMonth1 + "-" + curDay1;
        monthYM = TimeStampUtil.currMonth(System.currentTimeMillis());
        BodyFatConst.month = monthYM;
        tvDate.setVisibility(View.GONE);
        rl_switch_date.setVisibility(View.GONE);
        tv_switch_left.setText(getResources().getString(R.string.switch_mesure));
        tv_switch_right.setText(getResources().getString(R.string.switch_history));
        bodyFatFragmentDay = new BodyFatFragmentDay();
        Bundle args = new Bundle();
        args.putCharSequence("curmonth", monthYM);
        args.putCharSequence("curday", selectedDate);

        bodyFatFragmentDay.setArguments(args);
        bodyFatFragmentMonth = new BodyFatFragmentMonth();
        bodyFatFragmentMonth.setArguments(args);
        isDay = true;
        //getFragmentManager().beginTransaction().add(R.id.ll_fg_body, bodyFatFragmentDay, "fragmentDay").commit();

        bodyFatFragmentMeasure = new BodyFatFragmentMeasure();
        fgbody.setBackgroundColor(Color.WHITE);
        getFragmentManager().beginTransaction().add(R.id.ll_fg_body,bodyFatFragmentMeasure,"fragmentMeasure").commit();
        currentFragment = bodyFatFragmentMeasure;
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {

            case R.id.tv_switch_day:
                llSwitchDate.setBackground(getResources().getDrawable(R.drawable.switch_bracelete_day));
                rl_switch_date.setBackground(null);
                tv_switch_day.setTextColor(Color.parseColor("#0EA8C3"));
                tv_switch_month.setTextColor(Color.WHITE);
               /* Bundle args = new Bundle();
                args.putCharSequence("curmonth", monthYM);
                bodyFatFragmentDay.setArguments(args);*/
                isDay = true;
               if(bodyFatFragmentDay.isAdded()){
                    getFragmentManager().beginTransaction().hide(currentFragment).show(bodyFatFragmentDay).commit();
                }else{
                    getFragmentManager().beginTransaction().hide(currentFragment).add(R.id.ll_fg_body, bodyFatFragmentDay, "fragmentDay").commit();

                }
                currentFragment = bodyFatFragmentDay;
               // getFragmentManager().beginTransaction().replace(R.id.ll_fg_body, bodyFatFragmentDay, "fragmentDay").commit();
                break;
            case R.id.tv_switch_month:
                llSwitchDate.setBackground(getResources().getDrawable(R.drawable.switch_date2));
                rl_switch_date.setBackgroundColor(Color.WHITE);
                tv_switch_day.setTextColor(Color.parseColor("#0EA8C3"));
                tv_switch_month.setTextColor(Color.WHITE);
                isDay = false;
                if(bodyFatFragmentMonth.isAdded()){
                    getFragmentManager().beginTransaction().hide(currentFragment).show(bodyFatFragmentMonth).commit();
                }else{
                    getFragmentManager().beginTransaction().hide(currentFragment).add(R.id.ll_fg_body, bodyFatFragmentMonth, "fragmentMonth").commit();

                }
                currentFragment = bodyFatFragmentMonth;
               //getFragmentManager().beginTransaction().replace(R.id.ll_fg_body, bodyFatFragmentMonth, "fragmentMonth").commit();
                break;

            //即时测量
            case R.id.tv_switch_left:
                ll_switch_bottom.setBackground(getResources().getDrawable(R.drawable.switch_sportorsleep));
                tv_switch_right.setTextColor(Color.parseColor("#0EA8C3"));
                tv_switch_left.setTextColor(Color.WHITE);
                // getFragmentManager().beginTransaction().replace(R.id.ll_fg_body, bodyFatFragmentMonth,"fragmentMonth").commit();
                tvDate.setVisibility(View.GONE);
                rl_switch_date.setVisibility(View.GONE);
                fgbody.setBackgroundColor(Color.WHITE);
                if(bodyFatFragmentMeasure.isAdded()){
                    getFragmentManager().beginTransaction().hide(currentFragment).show(bodyFatFragmentMeasure).commit();
                }else{
                    getFragmentManager().beginTransaction().hide(currentFragment).add(R.id.ll_fg_body, bodyFatFragmentMeasure, "fragmentMeasure").commit();

                }
                currentFragment = bodyFatFragmentMeasure;
                //getFragmentManager().beginTransaction().replace(R.id.ll_fg_body, bodyFatFragmentMeasure, "fragmentMeasure").commit();
                break;
            //历史纪录
            case R.id.tv_switch_right:
                isDay = true;
                llSwitchDate.setBackground(getResources().getDrawable(R.drawable.switch_bracelete_day));
                rl_switch_date.setBackground(null);
                ll_switch_bottom.setBackground(getResources().getDrawable(R.drawable.switch_sleeporsports));
                tv_switch_left.setTextColor(Color.parseColor("#0EA8C3"));
                tv_switch_right.setTextColor(Color.WHITE);
                rl_switch_date.setVisibility(View.VISIBLE);
                tvDate.setVisibility(View.VISIBLE);
                fgbody.setBackgroundColor(Color.TRANSPARENT);
                if(bodyFatFragmentDay.isAdded()){
                    getFragmentManager().beginTransaction().hide(currentFragment).show(bodyFatFragmentDay).commit();
                }else{
                    getFragmentManager().beginTransaction().hide(currentFragment).add(R.id.ll_fg_body, bodyFatFragmentDay, "fragmentDay").commit();

                }
                currentFragment = bodyFatFragmentDay;
                break;

            case R.id.tv_date:

                DateChooseYMDialog mChangeDateDialog = new DateChooseYMDialog(
                        BodyFatActivity.this);
                dateString = tvDate.getText().toString().replace(" ", "");
                Log.d("year", dateString + "");
                int yearInt = Integer.valueOf(dateString.substring(0, 4));
                int monthInt = Integer.valueOf(dateString.substring(5, dateString.length() - 1));

                mChangeDateDialog.setDate(yearInt, monthInt);
                mChangeDateDialog.show();
                mChangeDateDialog.setBirthdayListener(new DateChooseYMDialog.OnBirthListener() {

                    @Override
                    public void onClick(String year, String month) {
                        // TODO Auto-generated method stub
                      /*  Toast.makeText(BodyFatActivity.this,
                                year + "-" + month + "-",
                                Toast.LENGTH_LONG).show();*/
                        if ((year + "年" + month + "月").equals(dateString)) {
                            return;
                        }
                        tvDate.setText(year + "年" + "  " + month + "月");
                        BodyFatConst.month = year+"-"+ TimeStampUtil.singleIntToDoubleString(Integer.valueOf(month));;
                        //TODO
                        //传入月份给fragment
                    /*    BodyFatFragmentDay fgDay = (BodyFatFragmentDay) getFragmentManager().findFragmentByTag("fragmentDay");
                        BodyFatFragmentMonth fgMonth = (BodyFatFragmentMonth) getFragmentManager().findFragmentByTag("fragmentMonth");
                        fgDay.update();
                        selectedDate = year + "-" + month + "-" + curDay1;
                        fgMonth.update();*/
                     if (isDay) {
                            BodyFatFragmentDay fgDay = (BodyFatFragmentDay) getFragmentManager().findFragmentByTag("fragmentDay");
                            selectedDate = year + "-" + month + "-" + curDay1;
                            Log.i("selsectedDate", selectedDate);
                            fgDay.update();
                        } else {
                            BodyFatFragmentMonth fgMonth = (BodyFatFragmentMonth) getFragmentManager().findFragmentByTag("fragmentMonth");
                            selectedDate = year + "-" + month;
                            fgMonth.update();
                        }

                    }
                });
                break;
            case R.id.iv_top_right:
                Utility.startActivity(BodyFatActivity.this,DatainputBodyfatActivity.class);
                break;
        }


    }

    public void back(View view) {

        finish();
    }

    //记一下
    protected void edit(View view) {

    }


}
